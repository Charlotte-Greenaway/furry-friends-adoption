---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;

// Function to create a regex from the path to match dynamic segments
const pathToRegex = (path: string) => new RegExp(`^${path.replace(/:\w+/g, '\\w+')}$`);

const hrefRegex = pathToRegex(href?.toString() || '');
const isActive = hrefRegex.test(pathname);

---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
</style>
